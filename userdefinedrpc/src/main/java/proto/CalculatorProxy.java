// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CalculatorProxy.proto

package proto;

public final class CalculatorProxy {
  private CalculatorProxy() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf service {@code CalculatorProxyService}
   */
  public static abstract class CalculatorProxyService
      implements com.google.protobuf.Service {
    protected CalculatorProxyService() {}

    public interface Interface {
      /**
       * <code>rpc add(.ProxyRequestProto) returns (.ProxyResponseProto);</code>
       */
      public abstract void add(
          com.google.protobuf.RpcController controller,
          proto.CalculatorProxyMsg.ProxyRequestProto request,
          com.google.protobuf.RpcCallback<proto.CalculatorProxyMsg.ProxyResponseProto> done);

      /**
       * <code>rpc minus(.ProxyRequestProto) returns (.ProxyResponseProto);</code>
       */
      public abstract void minus(
          com.google.protobuf.RpcController controller,
          proto.CalculatorProxyMsg.ProxyRequestProto request,
          com.google.protobuf.RpcCallback<proto.CalculatorProxyMsg.ProxyResponseProto> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new CalculatorProxyService() {
        @java.lang.Override
        public  void add(
            com.google.protobuf.RpcController controller,
            proto.CalculatorProxyMsg.ProxyRequestProto request,
            com.google.protobuf.RpcCallback<proto.CalculatorProxyMsg.ProxyResponseProto> done) {
          impl.add(controller, request, done);
        }

        @java.lang.Override
        public  void minus(
            com.google.protobuf.RpcController controller,
            proto.CalculatorProxyMsg.ProxyRequestProto request,
            com.google.protobuf.RpcCallback<proto.CalculatorProxyMsg.ProxyResponseProto> done) {
          impl.minus(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.add(controller, (proto.CalculatorProxyMsg.ProxyRequestProto)request);
            case 1:
              return impl.minus(controller, (proto.CalculatorProxyMsg.ProxyRequestProto)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return proto.CalculatorProxyMsg.ProxyRequestProto.getDefaultInstance();
            case 1:
              return proto.CalculatorProxyMsg.ProxyRequestProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return proto.CalculatorProxyMsg.ProxyResponseProto.getDefaultInstance();
            case 1:
              return proto.CalculatorProxyMsg.ProxyResponseProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc add(.ProxyRequestProto) returns (.ProxyResponseProto);</code>
     */
    public abstract void add(
        com.google.protobuf.RpcController controller,
        proto.CalculatorProxyMsg.ProxyRequestProto request,
        com.google.protobuf.RpcCallback<proto.CalculatorProxyMsg.ProxyResponseProto> done);

    /**
     * <code>rpc minus(.ProxyRequestProto) returns (.ProxyResponseProto);</code>
     */
    public abstract void minus(
        com.google.protobuf.RpcController controller,
        proto.CalculatorProxyMsg.ProxyRequestProto request,
        com.google.protobuf.RpcCallback<proto.CalculatorProxyMsg.ProxyResponseProto> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return proto.CalculatorProxy.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.add(controller, (proto.CalculatorProxyMsg.ProxyRequestProto)request,
            com.google.protobuf.RpcUtil.<proto.CalculatorProxyMsg.ProxyResponseProto>specializeCallback(
              done));
          return;
        case 1:
          this.minus(controller, (proto.CalculatorProxyMsg.ProxyRequestProto)request,
            com.google.protobuf.RpcUtil.<proto.CalculatorProxyMsg.ProxyResponseProto>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return proto.CalculatorProxyMsg.ProxyRequestProto.getDefaultInstance();
        case 1:
          return proto.CalculatorProxyMsg.ProxyRequestProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return proto.CalculatorProxyMsg.ProxyResponseProto.getDefaultInstance();
        case 1:
          return proto.CalculatorProxyMsg.ProxyResponseProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends proto.CalculatorProxy.CalculatorProxyService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void add(
          com.google.protobuf.RpcController controller,
          proto.CalculatorProxyMsg.ProxyRequestProto request,
          com.google.protobuf.RpcCallback<proto.CalculatorProxyMsg.ProxyResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          proto.CalculatorProxyMsg.ProxyResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            proto.CalculatorProxyMsg.ProxyResponseProto.class,
            proto.CalculatorProxyMsg.ProxyResponseProto.getDefaultInstance()));
      }

      public  void minus(
          com.google.protobuf.RpcController controller,
          proto.CalculatorProxyMsg.ProxyRequestProto request,
          com.google.protobuf.RpcCallback<proto.CalculatorProxyMsg.ProxyResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          proto.CalculatorProxyMsg.ProxyResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            proto.CalculatorProxyMsg.ProxyResponseProto.class,
            proto.CalculatorProxyMsg.ProxyResponseProto.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public proto.CalculatorProxyMsg.ProxyResponseProto add(
          com.google.protobuf.RpcController controller,
          proto.CalculatorProxyMsg.ProxyRequestProto request)
          throws com.google.protobuf.ServiceException;

      public proto.CalculatorProxyMsg.ProxyResponseProto minus(
          com.google.protobuf.RpcController controller,
          proto.CalculatorProxyMsg.ProxyRequestProto request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public proto.CalculatorProxyMsg.ProxyResponseProto add(
          com.google.protobuf.RpcController controller,
          proto.CalculatorProxyMsg.ProxyRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (proto.CalculatorProxyMsg.ProxyResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          proto.CalculatorProxyMsg.ProxyResponseProto.getDefaultInstance());
      }


      public proto.CalculatorProxyMsg.ProxyResponseProto minus(
          com.google.protobuf.RpcController controller,
          proto.CalculatorProxyMsg.ProxyRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (proto.CalculatorProxyMsg.ProxyResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          proto.CalculatorProxyMsg.ProxyResponseProto.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:CalculatorProxyService)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025CalculatorProxy.proto\032\030CalculatorProxy" +
      "Msg.proto2z\n\026CalculatorProxyService\022.\n\003a" +
      "dd\022\022.ProxyRequestProto\032\023.ProxyResponsePr" +
      "oto\0220\n\005minus\022\022.ProxyRequestProto\032\023.Proxy" +
      "ResponseProtoB\036\n\005protoB\017CalculatorProxy\210" +
      "\001\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          proto.CalculatorProxyMsg.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
